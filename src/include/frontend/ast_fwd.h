#ifndef INSOMNIA_AST_FWD_H
#define INSOMNIA_AST_FWD_H

namespace insomnia::rust_shard::ast {

class Crate;
class Item;
class VisItem;
class Function;
class FunctionParameters;
class FunctionParam;
class FunctionParamPattern;
class FunctionParamType;
class SelfParam;

class Type;
class TypeNoBounds;
class ParenthesizedType;
class TupleType;
class ReferenceType;
class ArrayType;
class SliceType;
class Struct;
class StructStruct;
class StructFields;
class StructField;
class Enumeration;
class EnumItems;
class EnumItem;
class EnumItemDiscriminant;
class ConstantItem;
class Trait;
class AssociatedItem;
class AssociatedTypeAlias;
class AssociatedConstantItem;
class AssociatedFunction;
class TypeAlias;
class Implementation;
class InherentImpl;
class TraitImpl;
class TypePath;
class TypePathSegment;
class PathIdentSegment;

class Expression;
class ExpressionWithoutBlock;
class LiteralExpression;
class PathExpression;
class PathInExpression;
class PathExprSegment;
class OperatorExpression;
class BorrowExpression;
class DereferenceExpression;
class NegationExpression;
class ArithmeticOrLogicalExpression;
class ComparisonExpression;
class LazyBooleanExpression;
class TypeCastExpression;
class AssignmentExpression;
class CompoundAssignmentExpression;
class GroupedExpression;
class ArrayExpression;
class ArrayElements;
class ExplicitArrayElements;
class RepeatedArrayElements;
class IndexExpression;
class TupleExpression;
class TupleElements;
class TupleIndexingExpression;
class StructExpression;
class StructExprFields;
class StructExprField;
class NamedStructExprField;
class IndexStructExprField;
class CallExpression;
class CallParams;
class MethodCallExpression;
class FieldExpression;
class ContinueExpression;
class BreakExpression;
class RangeExpression;
class RangeExpr;
class RangeFromExpr;
class RangeToExpr;
class RangeFullExpr;
class RangeInclusiveExpr;
class RangeToInclusiveExpr;
class ReturnExpression;
class UnderscoreExpression;
class ExpressionWithBlock;
class BlockExpression;
class Statements;
class Statement;
class EmptyStatement;
class ItemStatement;
class LetStatement;
class ExpressionStatement;
class LoopExpression;
class InfiniteLoopExpression;
class PredicateLoopExpression;
class IfExpression;
class Conditions;
class MatchExpression;
class MatchArms;
class MatchArm;
class MatchArmGuard;

class Pattern;
class PatternNoTopAlt;
class PatternWithoutRange;
class LiteralPattern;
class IdentifierPattern;
class WildcardPattern;
class ReferencePattern;
class StructPattern;
class StructPatternElements;
class StructPatternFields;
class StructPatternField;
class TuplePattern;
class TuplePatternItems;
class GroupedPattern;
class SlicePattern;
class SlicePatternItems;
class PathPattern;

#define INSOMNIA_RUST_SHARD_AST_NODES_LIST(M) \
  M(Crate) \
  M(Item) \
  M(VisItem) \
  M(Function) \
  M(FunctionParameters) \
  M(FunctionParam) \
  M(FunctionParamPattern) \
  M(FunctionParamType) \
  M(SelfParam) \
  M(Type) \
  M(TypeNoBounds) \
  M(ParenthesizedType) \
  M(TupleType) \
  M(ReferenceType) \
  M(ArrayType) \
  M(SliceType) \
  M(Struct) \
  M(StructStruct) \
  M(StructFields) \
  M(StructField) \
  M(Enumeration) \
  M(EnumItems) \
  M(EnumItem) \
  M(EnumItemDiscriminant) \
  M(ConstantItem) \
  M(Trait) \
  M(AssociatedItem) \
  M(AssociatedTypeAlias) \
  M(AssociatedConstantItem) \
  M(AssociatedFunction) \
  M(TypeAlias) \
  M(Implementation) \
  M(InherentImpl) \
  M(TraitImpl) \
  M(TypePath) \
  M(TypePathSegment) \
  M(PathIdentSegment) \
  M(Expression) \
  M(ExpressionWithoutBlock) \
  M(LiteralExpression) \
  M(PathExpression) \
  M(PathInExpression) \
  M(PathExprSegment) \
  M(OperatorExpression) \
  M(BorrowExpression) \
  M(DereferenceExpression) \
  M(NegationExpression) \
  M(ArithmeticOrLogicalExpression) \
  M(ComparisonExpression) \
  M(LazyBooleanExpression) \
  M(TypeCastExpression) \
  M(AssignmentExpression) \
  M(CompoundAssignmentExpression) \
  M(GroupedExpression) \
  M(ArrayExpression) \
  M(ArrayElements) \
  M(ExplicitArrayElements) \
  M(RepeatedArrayElements) \
  M(IndexExpression) \
  M(TupleExpression) \
  M(TupleElements) \
  M(TupleIndexingExpression) \
  M(StructExpression) \
  M(StructExprFields) \
  M(StructExprField) \
  M(NamedStructExprField) \
  M(IndexStructExprField) \
  M(CallExpression) \
  M(CallParams) \
  M(MethodCallExpression) \
  M(FieldExpression) \
  M(ContinueExpression) \
  M(BreakExpression) \
  M(RangeExpression) \
  M(RangeExpr) \
  M(RangeFromExpr) \
  M(RangeToExpr) \
  M(RangeFullExpr) \
  M(RangeInclusiveExpr) \
  M(RangeToInclusiveExpr) \
  M(ReturnExpression) \
  M(UnderscoreExpression) \
  M(ExpressionWithBlock) \
  M(BlockExpression) \
  M(Statements) \
  M(Statement) \
  M(EmptyStatement) \
  M(ItemStatement) \
  M(LetStatement) \
  M(ExpressionStatement) \
  M(LoopExpression) \
  M(InfiniteLoopExpression) \
  M(PredicateLoopExpression) \
  M(IfExpression) \
  M(Conditions) \
  M(MatchExpression) \
  M(MatchArms) \
  M(MatchArm) \
  M(MatchArmGuard) \
  M(Pattern) \
  M(PatternNoTopAlt) \
  M(PatternWithoutRange) \
  M(LiteralPattern) \
  M(IdentifierPattern) \
  M(WildcardPattern) \
  M(ReferencePattern) \
  M(StructPattern) \
  M(StructPatternElements) \
  M(StructPatternFields) \
  M(StructPatternField) \
  M(TuplePattern) \
  M(TuplePatternItems) \
  M(GroupedPattern) \
  M(SlicePattern) \
  M(SlicePatternItems) \
  M(PathPattern)


#define INSOMNIA_RUST_SHARD_AST_VISITABLE_NODES_LIST(M) \
  M(Crate) \
  M(Item) \
  M(Function) \
  M(FunctionParameters) \
  M(FunctionParamPattern) \
  M(FunctionParamType) \
  M(SelfParam) \
  M(ParenthesizedType) \
  M(TupleType) \
  M(ReferenceType) \
  M(ArrayType) \
  M(SliceType) \
  M(StructStruct) \
  M(StructFields) \
  M(StructField) \
  M(Enumeration) \
  M(EnumItems) \
  M(EnumItem) \
  M(EnumItemDiscriminant) \
  M(ConstantItem) \
  M(Trait) \
  M(AssociatedTypeAlias) \
  M(AssociatedConstantItem) \
  M(AssociatedFunction) \
  M(TypeAlias) \
  M(InherentImpl) \
  M(TraitImpl) \
  M(TypePath) \
  M(TypePathSegment) \
  M(PathIdentSegment) \
  M(LiteralExpression) \
  M(PathInExpression) \
  M(PathExprSegment) \
  M(BorrowExpression) \
  M(DereferenceExpression) \
  M(NegationExpression) \
  M(ArithmeticOrLogicalExpression) \
  M(ComparisonExpression) \
  M(LazyBooleanExpression) \
  M(TypeCastExpression) \
  M(AssignmentExpression) \
  M(CompoundAssignmentExpression) \
  M(GroupedExpression) \
  M(ArrayExpression) \
  M(ExplicitArrayElements) \
  M(RepeatedArrayElements) \
  M(IndexExpression) \
  M(TupleExpression) \
  M(TupleElements) \
  M(TupleIndexingExpression) \
  M(StructExpression) \
  M(StructExprFields) \
  M(NamedStructExprField) \
  M(IndexStructExprField) \
  M(CallExpression) \
  M(CallParams) \
  M(MethodCallExpression) \
  M(FieldExpression) \
  M(ContinueExpression) \
  M(BreakExpression) \
  M(RangeExpr) \
  M(RangeFromExpr) \
  M(RangeToExpr) \
  M(RangeFullExpr) \
  M(RangeInclusiveExpr) \
  M(RangeToInclusiveExpr) \
  M(ReturnExpression) \
  M(UnderscoreExpression) \
  M(BlockExpression) \
  M(Statements) \
  M(EmptyStatement) \
  M(ItemStatement) \
  M(LetStatement) \
  M(ExpressionStatement) \
  M(InfiniteLoopExpression) \
  M(PredicateLoopExpression) \
  M(IfExpression) \
  M(Conditions) \
  M(MatchExpression) \
  M(MatchArms) \
  M(MatchArm) \
  M(MatchArmGuard) \
  M(Pattern) \
  M(LiteralPattern) \
  M(IdentifierPattern) \
  M(WildcardPattern) \
  M(ReferencePattern) \
  M(StructPattern) \
  M(StructPatternElements) \
  M(StructPatternFields) \
  M(StructPatternField) \
  M(TuplePattern) \
  M(TuplePatternItems) \
  M(GroupedPattern) \
  M(SlicePattern) \
  M(SlicePatternItems) \
  M(PathPattern)

}
#endif // INSOMNIA_AST_FWD_H