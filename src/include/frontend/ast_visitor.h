#ifndef INSOMNIA_AST_VISITOR_H
#define INSOMNIA_AST_VISITOR_H

#include "ast_fwd.h"

namespace insomnia::ast {

class BasicVisitor {
public:
  virtual ~BasicVisitor() = default;
  virtual void pre_visit(Crate &node) {}
  virtual void pre_visit(Item &node) {}
  virtual void pre_visit(VisItem &node) {}
  virtual void pre_visit(Function &node) {}
  virtual void pre_visit(FunctionParameters &node) {}
  virtual void pre_visit(FunctionParam &node) {}
  virtual void pre_visit(FunctionParamPattern &node) {}
  virtual void pre_visit(SelfParam &node) {}
  virtual void pre_visit(Type &node) {}
  virtual void pre_visit(TypeNoBounds &node) {}
  virtual void pre_visit(ParenthesizedType &node) {}
  virtual void pre_visit(TupleType &node) {}
  virtual void pre_visit(ReferenceType &node) {}
  virtual void pre_visit(ArrayType &node) {}
  virtual void pre_visit(SliceType &node) {}
  virtual void pre_visit(Struct &node) {}
  virtual void pre_visit(StructStruct &node) {}
  virtual void pre_visit(StructFields &node) {}
  virtual void pre_visit(StructField &node) {}
  virtual void pre_visit(Enumeration &node) {}
  virtual void pre_visit(EnumItems &node) {}
  virtual void pre_visit(EnumItem &node) {}
  virtual void pre_visit(EnumItemDiscriminant &node) {}
  virtual void pre_visit(ConstantItem &node) {}
  virtual void pre_visit(Trait &node) {}
  virtual void pre_visit(AssociatedItem &node) {}
  virtual void pre_visit(TypeAlias &node) {}
  virtual void pre_visit(Implementation &node) {}
  virtual void pre_visit(InherentImpl &node) {}
  virtual void pre_visit(TraitImpl &node) {}
  virtual void pre_visit(TypePath &node) {}
  virtual void pre_visit(TypePathSegment &node) {}
  virtual void pre_visit(PathIdentSegment &node) {}
  virtual void pre_visit(Expression &node) {}
  virtual void pre_visit(ExpressionWithoutBlock &node) {}
  virtual void pre_visit(LiteralExpression &node) {}
  virtual void pre_visit(PathExpression &node) {}
  virtual void pre_visit(PathInExpression &node) {}
  virtual void pre_visit(PathExprSegment &node) {}
  virtual void pre_visit(OperatorExpression &node) {}
  virtual void pre_visit(BorrowExpression &node) {}
  virtual void pre_visit(DereferenceExpression &node) {}
  virtual void pre_visit(NegationExpression &node) {}
  virtual void pre_visit(ArithmeticOrLogicalExpression &node) {}
  virtual void pre_visit(ComparisonExpression &node) {}
  virtual void pre_visit(LazyBooleanExpression &node) {}
  virtual void pre_visit(TypeCastExpression &node) {}
  virtual void pre_visit(AssignmentExpression &node) {}
  virtual void pre_visit(CompoundAssignmentExpression &node) {}
  virtual void pre_visit(GroupedExpression &node) {}
  virtual void pre_visit(ArrayExpression &node) {}
  virtual void pre_visit(ArrayElements &node) {}
  virtual void pre_visit(IndexExpression &node) {}
  virtual void pre_visit(TupleExpression &node) {}
  virtual void pre_visit(TupleElements &node) {}
  virtual void pre_visit(TupleIndexingExpression &node) {}
  virtual void pre_visit(StructExpression &node) {}
  virtual void pre_visit(StructExprFields &node) {}
  virtual void pre_visit(StructExprField &node) {}
  virtual void pre_visit(StructBase &node) {}
  virtual void pre_visit(CallExpression &node) {}
  virtual void pre_visit(CallParams &node) {}
  virtual void pre_visit(MethodCallExpression &node) {}
  virtual void pre_visit(FieldExpression &node) {}
  virtual void pre_visit(ContinueExpression &node) {}
  virtual void pre_visit(BreakExpression &node) {}
  virtual void pre_visit(RangeExpression &node) {}
  virtual void pre_visit(RangeExpr &node) {}
  virtual void pre_visit(RangFromExpr &node) {}
  virtual void pre_visit(RangeToExpr &node) {}
  virtual void pre_visit(RangeFullExpr &node) {}
  virtual void pre_visit(RangeInclusiveExpr &node) {}
  virtual void pre_visit(RangeToInclusiveExpr &node) {}
  virtual void pre_visit(ReturnExpression &node) {}
  virtual void pre_visit(UnderscoreExpression &node) {}
  virtual void pre_visit(ExpressionWithBlock &node) {}
  virtual void pre_visit(BlockExpression &node) {}
  virtual void pre_visit(Statements &node) {}
  virtual void pre_visit(Statement &node) {}
  virtual void pre_visit(LetStatement &node) {}
  virtual void pre_visit(ExpressionStatement &node) {}
  virtual void pre_visit(LoopExpression &node) {}
  virtual void pre_visit(InfiniteLoopExpression &node) {}
  virtual void pre_visit(PredicateLoopExpression &node) {}
  virtual void pre_visit(IfExpression &node) {}
  virtual void pre_visit(Conditions &node) {}
  virtual void pre_visit(MatchExpression &node) {}
  virtual void pre_visit(MatchArms &node) {}
  virtual void pre_visit(MatchArm &node) {}
  virtual void pre_visit(MatchArmGuard &node) {}
  virtual void pre_visit(Pattern &node) {}
  virtual void pre_visit(PatternNoTopAlt &node) {}
  virtual void pre_visit(PatternWithoutRange &node) {}
  virtual void pre_visit(LiteralPattern &node) {}
  virtual void pre_visit(IdentifierPattern &node) {}
  virtual void pre_visit(WildcardPattern &node) {}
  virtual void pre_visit(RestPattern &node) {}
  virtual void pre_visit(ReferencePattern &node) {}
  virtual void pre_visit(StructPattern &node) {}
  virtual void pre_visit(StructPatternElements &node) {}
  virtual void pre_visit(StructPatternEtCetera &node) {}
  virtual void pre_visit(StructPatternFields &node) {}
  virtual void pre_visit(StructPatternField &node) {}
  virtual void pre_visit(TuplePattern &node) {}
  virtual void pre_visit(TuplePatternItems &node) {}
  virtual void pre_visit(GroupedPattern &node) {}
  virtual void pre_visit(SlicePattern &node) {}
  virtual void pre_visit(SlicePatternItems &node) {}
  virtual void pre_visit(PathPattern &node) {}
  virtual void post_visit(Crate &node) {}
  virtual void post_visit(Item &node) {}
  virtual void post_visit(VisItem &node) {}
  virtual void post_visit(Function &node) {}
  virtual void post_visit(FunctionParameters &node) {}
  virtual void post_visit(FunctionParam &node) {}
  virtual void post_visit(FunctionParamPattern &node) {}
  virtual void post_visit(SelfParam &node) {}
  virtual void post_visit(Type &node) {}
  virtual void post_visit(TypeNoBounds &node) {}
  virtual void post_visit(ParenthesizedType &node) {}
  virtual void post_visit(TupleType &node) {}
  virtual void post_visit(ReferenceType &node) {}
  virtual void post_visit(ArrayType &node) {}
  virtual void post_visit(SliceType &node) {}
  virtual void post_visit(Struct &node) {}
  virtual void post_visit(StructStruct &node) {}
  virtual void post_visit(StructFields &node) {}
  virtual void post_visit(StructField &node) {}
  virtual void post_visit(Enumeration &node) {}
  virtual void post_visit(EnumItems &node) {}
  virtual void post_visit(EnumItem &node) {}
  virtual void post_visit(EnumItemDiscriminant &node) {}
  virtual void post_visit(ConstantItem &node) {}
  virtual void post_visit(Trait &node) {}
  virtual void post_visit(AssociatedItem &node) {}
  virtual void post_visit(TypeAlias &node) {}
  virtual void post_visit(Implementation &node) {}
  virtual void post_visit(InherentImpl &node) {}
  virtual void post_visit(TraitImpl &node) {}
  virtual void post_visit(TypePath &node) {}
  virtual void post_visit(TypePathSegment &node) {}
  virtual void post_visit(PathIdentSegment &node) {}
  virtual void post_visit(Expression &node) {}
  virtual void post_visit(ExpressionWithoutBlock &node) {}
  virtual void post_visit(LiteralExpression &node) {}
  virtual void post_visit(PathExpression &node) {}
  virtual void post_visit(PathInExpression &node) {}
  virtual void post_visit(PathExprSegment &node) {}
  virtual void post_visit(OperatorExpression &node) {}
  virtual void post_visit(BorrowExpression &node) {}
  virtual void post_visit(DereferenceExpression &node) {}
  virtual void post_visit(NegationExpression &node) {}
  virtual void post_visit(ArithmeticOrLogicalExpression &node) {}
  virtual void post_visit(ComparisonExpression &node) {}
  virtual void post_visit(LazyBooleanExpression &node) {}
  virtual void post_visit(TypeCastExpression &node) {}
  virtual void post_visit(AssignmentExpression &node) {}
  virtual void post_visit(CompoundAssignmentExpression &node) {}
  virtual void post_visit(GroupedExpression &node) {}
  virtual void post_visit(ArrayExpression &node) {}
  virtual void post_visit(ArrayElements &node) {}
  virtual void post_visit(IndexExpression &node) {}
  virtual void post_visit(TupleExpression &node) {}
  virtual void post_visit(TupleElements &node) {}
  virtual void post_visit(TupleIndexingExpression &node) {}
  virtual void post_visit(StructExpression &node) {}
  virtual void post_visit(StructExprFields &node) {}
  virtual void post_visit(StructExprField &node) {}
  virtual void post_visit(StructBase &node) {}
  virtual void post_visit(CallExpression &node) {}
  virtual void post_visit(CallParams &node) {}
  virtual void post_visit(MethodCallExpression &node) {}
  virtual void post_visit(FieldExpression &node) {}
  virtual void post_visit(ContinueExpression &node) {}
  virtual void post_visit(BreakExpression &node) {}
  virtual void post_visit(RangeExpression &node) {}
  virtual void post_visit(RangeExpr &node) {}
  virtual void post_visit(RangFromExpr &node) {}
  virtual void post_visit(RangeToExpr &node) {}
  virtual void post_visit(RangeFullExpr &node) {}
  virtual void post_visit(RangeInclusiveExpr &node) {}
  virtual void post_visit(RangeToInclusiveExpr &node) {}
  virtual void post_visit(ReturnExpression &node) {}
  virtual void post_visit(UnderscoreExpression &node) {}
  virtual void post_visit(ExpressionWithBlock &node) {}
  virtual void post_visit(BlockExpression &node) {}
  virtual void post_visit(Statements &node) {}
  virtual void post_visit(Statement &node) {}
  virtual void post_visit(LetStatement &node) {}
  virtual void post_visit(ExpressionStatement &node) {}
  virtual void post_visit(LoopExpression &node) {}
  virtual void post_visit(InfiniteLoopExpression &node) {}
  virtual void post_visit(PredicateLoopExpression &node) {}
  virtual void post_visit(IfExpression &node) {}
  virtual void post_visit(Conditions &node) {}
  virtual void post_visit(MatchExpression &node) {}
  virtual void post_visit(MatchArms &node) {}
  virtual void post_visit(MatchArm &node) {}
  virtual void post_visit(MatchArmGuard &node) {}
  virtual void post_visit(Pattern &node) {}
  virtual void post_visit(PatternNoTopAlt &node) {}
  virtual void post_visit(PatternWithoutRange &node) {}
  virtual void post_visit(LiteralPattern &node) {}
  virtual void post_visit(IdentifierPattern &node) {}
  virtual void post_visit(WildcardPattern &node) {}
  virtual void post_visit(RestPattern &node) {}
  virtual void post_visit(ReferencePattern &node) {}
  virtual void post_visit(StructPattern &node) {}
  virtual void post_visit(StructPatternElements &node) {}
  virtual void post_visit(StructPatternEtCetera &node) {}
  virtual void post_visit(StructPatternFields &node) {}
  virtual void post_visit(StructPatternField &node) {}
  virtual void post_visit(TuplePattern &node) {}
  virtual void post_visit(TuplePatternItems &node) {}
  virtual void post_visit(GroupedPattern &node) {}
  virtual void post_visit(SlicePattern &node) {}
  virtual void post_visit(SlicePatternItems &node) {}
  virtual void post_visit(PathPattern &node) {}
};


}

#endif // INSOMNIA_AST_VISITOR_H